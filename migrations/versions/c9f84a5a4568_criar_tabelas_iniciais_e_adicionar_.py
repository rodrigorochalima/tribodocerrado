"""Criar tabelas iniciais e adicionar colunas ausentes

Revision ID: c9f84a5a4568
Revises: 
Create Date: 2025-05-29 15:44:11.442597

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.exc import ProgrammingError


# revision identifiers, used by Alembic.
revision: str = 'c9f84a5a4568'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Modificado para tratar colunas que podem nÃ£o existir
    try:
        op.drop_column('motorcycles', 'engine_number')
    except (ProgrammingError, sa.exc.OperationalError):
        pass
        
    try:
        op.drop_column('motorcycles', 'chassis_number')
    except (ProgrammingError, sa.exc.OperationalError):
        pass
        
    try:
        op.drop_column('motorcycles', 'insurance_expiry')
    except (ProgrammingError, sa.exc.OperationalError):
        pass
        
    try:
        op.drop_column('motorcycles', 'year')
    except (ProgrammingError, sa.exc.OperationalError):
        pass
        
    try:
        op.drop_column('motorcycles', 'insurance_policy')
    except (ProgrammingError, sa.exc.OperationalError):
        pass
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('motorcycles', sa.Column('insurance_policy', sa.VARCHAR(length=50), nullable=True))
    op.add_column('motorcycles', sa.Column('year', sa.INTEGER(), nullable=True))
    op.add_column('motorcycles', sa.Column('insurance_expiry', sa.DATE(), nullable=True))
    op.add_column('motorcycles', sa.Column('chassis_number', sa.VARCHAR(length=50), nullable=True))
    op.add_column('motorcycles', sa.Column('engine_number', sa.VARCHAR(length=50), nullable=True))
    # ### end Alembic commands ###
